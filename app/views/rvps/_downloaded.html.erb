<%= form_tag download_selected_pdfs_path, method: :post do %>
  <% @pdfs.select { |pdf| pdf.downloaded_by?(current_user) }.each do |pdf| %>
    <li class="list-group-item">
      <%= check_box_tag "selected_files[]", pdf.id %>
      <%= "#{pdf.full_name} AMC Form #{pdf.formatted_date}.pdf" %>
      <%= link_to 'Download', download_pdf_path(pdf.id), class: 'btn btn-sm btn-primary' %>
    </li>
  <% end %>
  <%= submit_tag "Download Selected as ZIP", class: "btn btn-info mt-2" %>
<% end %>

<script>
document.addEventListener("DOMContentLoaded", function() {
  Array.from(document.getElementsByTagName('form')).forEach(form => {
    form.onsubmit = async (e) => {
      e.preventDefault();
      await ajaxSubmitForm(form);
    };
  });
});

async function initiateDownload(url) {
  const a = document.createElement('a');
  a.href = url;
  a.setAttribute('download', '');
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
}

async function ajaxSubmitForm(form) {
  try {
    const formData = new FormData(form);
    const response = await fetch(form.action, {
      method: 'POST',
      body: formData,
    });

    if (response.ok) {
      const contentType = response.headers.get("Content-Type");
      if (contentType && contentType.includes("application/zip")) {
        const blob = await response.blob();
        const downloadUrl = URL.createObjectURL(blob);

        initiateDownload(downloadUrl);

        // Delay to ensure download has initiated
        //await new Promise(resolve => setTimeout(resolve, 1000)); // Wait for 5 seconds

        URL.revokeObjectURL(downloadUrl); // Free up resources by revoking the Blob URL

        window.location.reload(); // Refresh the page after the download has (hopefully) initiated
      } else {
        console.error('Expected a ZIP file, but the content type is:', contentType);
      }
    } else {
      console.error('Server responded with status:', response.status);
    }
  } catch (error) {
    console.error('AJAX Form Submission Error:', error);
  }
}
</script>