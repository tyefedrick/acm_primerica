<%= form_tag download_selected_pdfs_path, method: :post do %>
  <div class="row">
    <div class="col">
      <div class="btn-group-toggle" data-toggle="buttons">
        <label class="btn btn-primary">
          <%= check_box_tag "select_all_downloaded", 0, false, id: "select-all-checkbox-downloaded" %>
          Select All
        </label>
      </div>
    </div>

     <!-- Year Sorter Dropdown with a custom class for CSS styling -->
    <div class="col-auto year-dropdown-container">
      <select class="form-control" id="yearSorter" onchange="filterByYear()">
        <option value="">Select Year</option>
        <% pdf_years = @pdfs.map { |pdf| pdf.formatted_date.year }.uniq.sort %>
        <% pdf_years.each do |year| %>
          <option value="<%= year %>"><%= year %></option>
        <% end %>
      </select>
    </div>

    <div class="col-auto">
      <%= submit_tag "Download Selected as ZIP", class: "btn btn-info" %>
    </div>
  </div>

  <div class="row mt-3">
    <div class="col"><!-- Empty column to create space --></div>
  </div>
  <% @pdfs.select { |pdf| pdf.downloaded_by?(current_user) }.each do |pdf| %>
    <li class="list-group-item">
      <div class="d-flex justify-content-between align-items-center">
        <div>
          <%= check_box_tag "selected_files[]", pdf.id, false, class: "pdf-checkbox-downloaded" %>
          <%= "#{pdf.full_name} AMC Form #{pdf.formatted_date}.pdf" %>
        </div>
        <div>
          <%= link_to 'Download', download_pdf_path(pdf.id), class: 'btn btn-sm btn-primary' %>
        </div>
      </div>
    </li>
  <% end %>
<% end %>




<script>
document.addEventListener("DOMContentLoaded", function() {
  document.getElementById('select-all-checkbox-downloaded').addEventListener('change', function() {
    const checkboxes = document.querySelectorAll('.pdf-checkbox-downloaded');
    checkboxes.forEach(checkbox => {
      checkbox.checked = this.checked;
    });
  });

  Array.from(document.getElementsByTagName('form')).forEach(form => {
    form.onsubmit = async (e) => {
      e.preventDefault();
      await ajaxSubmitForm(form);
    };
  });
});

async function initiateDownload(url) {
  const a = document.createElement('a');
  a.href = url;
  a.setAttribute('download', '');
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
}

async function ajaxSubmitForm(form) {
  try {
    const formData = new FormData(form);
    const response = await fetch(form.action, {
      method: 'POST',
      body: formData,
    });

    if (response.ok) {
      const contentType = response.headers.get("Content-Type");
      if (contentType && contentType.includes("application/zip")) {
        const blob = await response.blob();
        const downloadUrl = URL.createObjectURL(blob);

        initiateDownload(downloadUrl);

        URL.revokeObjectURL(downloadUrl);

        window.location.reload();
      } else {
        console.error('Expected a ZIP file, but the content type is:', contentType);
      }
    } else {
      console.error('Server responded with status:', response.status);
    }
  } catch (error) {
    console.error('AJAX Form Submission Error:', error);
  }
}

function filterByYear() {
  var selectedYear = document.getElementById('yearSorter').value;
  var pdfItems = document.querySelectorAll('.list-group-item');

  pdfItems.forEach(function(item) {
    var pdfYear = item.textContent.match(/\b\d{4}\b/); // Extract the year from the text content
    if (pdfYear) {
      if (selectedYear === '' || pdfYear.includes(selectedYear)) {
        item.style.display = ''; // Show item
      } else {
        item.style.display = 'none'; // Hide item
      }
    }
  });
}
</script>

<style>
/* CSS for Year Dropdown Container */
.year-dropdown-container {
  margin-right: 40px; /* Adjust the value as needed */
}
</style>